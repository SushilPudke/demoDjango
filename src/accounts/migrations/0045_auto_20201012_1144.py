# Generated by Django 2.2.16 on 2020-10-12 08:44

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0044_auto_20201002_1915'),
    ]

    operations = [
        migrations.CreateModel(
            name='AverageHourlyRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('min_rate', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('max_rate', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('currency', models.CharField(choices=[('USD', 'US Dollar'), ('EUR', 'Euro'), ('CHF', 'Swiss Franc')], max_length=3)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='candidateprofile',
            name='specialization',
            field=models.ManyToManyField(related_name='candidate_specilaizations', to='accounts.Specialization'),
        ),
        migrations.AlterField(
            model_name='historicaluser',
            name='user_type',
            field=models.CharField(choices=[('COMPANY', 'Company'), ('CANDIDATE', 'Candidate'), ('AGENCY', 'Agency')], default='CANDIDATE', max_length=32, verbose_name='User type'),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_type',
            field=models.CharField(choices=[('COMPANY', 'Company'), ('CANDIDATE', 'Candidate'), ('AGENCY', 'Agency')], default='CANDIDATE', max_length=32, verbose_name='User type'),
        ),
        migrations.CreateModel(
            name='AgencyProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('company_logo', models.ImageField(blank=True, null=True, upload_to='company_logos', verbose_name='Logo')),
                ('company_name', models.CharField(max_length=255, verbose_name='Company name')),
                ('company_name_en', models.CharField(max_length=255, null=True, verbose_name='Company name')),
                ('company_name_de', models.CharField(max_length=255, null=True, verbose_name='Company name')),
                ('number_of_specialists', models.IntegerField(choices=[(1, '<5'), (2, '5-10'), (3, '10-20'), (4, '>20')], null=True, verbose_name='Number of available specialists')),
                ('communication_languages', multiselectfield.db.fields.MultiSelectField(choices=[('en', 'English'), ('de', 'German')], max_length=5, verbose_name='Communication languages')),
                ('company_description', models.TextField(blank=True, validators=[django.core.validators.MinLengthValidator(100, message='Please enter minimum 100 symbols'), django.core.validators.MaxLengthValidator(2000, message='Please enter maximun 2000 symbols')], verbose_name='Description')),
                ('company_description_en', models.TextField(blank=True, null=True, validators=[django.core.validators.MinLengthValidator(100, message='Please enter minimum 100 symbols'), django.core.validators.MaxLengthValidator(2000, message='Please enter maximun 2000 symbols')], verbose_name='Description')),
                ('company_description_de', models.TextField(blank=True, null=True, validators=[django.core.validators.MinLengthValidator(100, message='Please enter minimum 100 symbols'), django.core.validators.MaxLengthValidator(2000, message='Please enter maximun 2000 symbols')], verbose_name='Description')),
                ('founded', models.DateField(verbose_name='Founded')),
                ('company_type', models.CharField(max_length=255, verbose_name='Company type')),
                ('company_adress', models.CharField(max_length=255, verbose_name='Adress')),
                ('company_adress_en', models.CharField(max_length=255, null=True, verbose_name='Adress')),
                ('company_adress_de', models.CharField(max_length=255, null=True, verbose_name='Adress')),
                ('postal_code', models.CharField(max_length=255, verbose_name='Postal Code')),
                ('city', models.CharField(max_length=255, verbose_name='City')),
                ('city_en', models.CharField(max_length=255, null=True, verbose_name='City')),
                ('city_de', models.CharField(max_length=255, null=True, verbose_name='City')),
                ('country', models.CharField(max_length=255, verbose_name='Country')),
                ('country_en', models.CharField(max_length=255, null=True, verbose_name='Country')),
                ('country_de', models.CharField(max_length=255, null=True, verbose_name='Country')),
                ('company_website', models.CharField(max_length=255, verbose_name='Website')),
                ('phone_number', models.CharField(max_length=16, verbose_name='Phone number')),
                ('average_hourly_rate', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='average_hourly_rate', to='accounts.AverageHourlyRate')),
                ('specialization', models.ManyToManyField(related_name='agency_specilaizations', to='accounts.Specialization')),
                ('technologies', models.ManyToManyField(related_name='agency_technologies', to='accounts.Technology')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agency_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'agency profile',
                'verbose_name_plural': 'agency profiles',
            },
        ),
        migrations.CreateModel(
            name='AgencyLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=255, verbose_name='Link url')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_links', to='accounts.AgencyProfile', verbose_name='Company')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AgencyContactPerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=255, verbose_name='First name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last name')),
                ('phone_number', models.CharField(max_length=16, verbose_name='Phone number')),
                ('email', models.EmailField(max_length=254, verbose_name='Email address')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contact_persons', to='accounts.AgencyProfile', verbose_name='Company')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]

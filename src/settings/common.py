"""
Django settings for job_portal project.

Generated by 'django-admin startproject' using Django 2.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import sys
from datetime import timedelta
from urllib.parse import urljoin

import environ
from django.utils.translation import ugettext_lazy as _

env = environ.Env()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str('SECRET_KEY', default='+=pdb)c2^o^!i_a#!_)x5zolx+vre19ee)ua=s0zkqdux&813%')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.str("DEBUG", default=True)

# If is unit-testing environment
TESTING = len(sys.argv) > 1 and sys.argv[1] == 'test'

ALLOWED_HOSTS = [
    '127.0.0.1',
    'localhost',
    'api.dev.globalit24.com',
    'api.staging.globalit24.com',
    'api.globalit24.com',
    '51.103.138.27'
]


# Application definition

DEFAULT_APPS = [
    'modeltranslation',  # should be before django.contrib.admin
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
]

EXTERNAL_APPS = [
    'rest_framework',
    'rest_framework_swagger',
    'django_rest_passwordreset',
    'corsheaders',
    'colorfield',
    'django_filters',
    'import_export',
    'simple_history',
    'admin_reports',
    'trench',
    'social_django',
    'guardian',
    'paypal.standard.ipn',
]

LOCAL_APPS = [
    'accounts',
    'authentication',
    'projects',
    'faq',
    'base',
    'secure_documents',
    'sitemap',
    'invitations',
    'organization_management',
    'payments',
]

INSTALLED_APPS = DEFAULT_APPS + EXTERNAL_APPS + LOCAL_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'rollbar.contrib.django.middleware.RollbarNotifierMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware',
]

ROOT_URLCONF = 'urls'

CORS_ORIGIN_WHITELIST = [
    'http://127.0.0.1:3000',
    'http://localhost:3000',
    'https://dev.globalit24.com',
    'https://staging.globalit24.com',
    'https://globalit24.com',
]
CORS_ORIGIN_ALLOW_ALL = False


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': (os.path.join(BASE_DIR, 'templates'),),
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASE_ROUTERS = ('secure_documents.dbrouters.SecureDBRouter',)

DATABASES = {
    'default': env.db("DATABASE_URL", default="postgres://postgres:sushil@127.0.0.1/globalit24"),
    'secure_documents_db': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'HOST': env.str('SECURE_DB_IP', default=None),
        'PORT': '5432',
        'NAME': env.str('SECURE_DB_NAME', default=None),
        'USER': env.str('SECURE_DB_USER', default=None),
        'PASSWORD': env.str('SECURE_DB_PASSWORD', default=None),
        'OPTIONS': {
            'sslmode': 'require',
            'sslcert': os.path.join(BASE_DIR, env.str('SSL_CERT_PATH', default='secure_server\\postgresql.crt')),
            'sslkey': os.path.join(BASE_DIR, env.str('SSL_KEY_PATH', default='secure_server\\postgresql.key')),
            'sslrootcert': os.path.join(BASE_DIR, env.str('SSL_ROOT_CERT_PATH', default='secure_server\\root.crt')),
        }
    }
}


# django-storages
# https://django-storages.readthedocs.io/en/latest/index.html

SFTP_STORAGE_HOST = env.str('SECURE_SFTP_HOST', default='127.0.0.1')
SFTP_STORAGE_ROOT = '/media/'
SFTP_STORAGE_PARAMS = {
    'username': env.str('SECURE_SFTP_USERNAME', default=None),
    'password': env.str('SECURE_SFTP_PASSWORD', default=None),
    'port': env.int('SECURE_SFTP_PORT', default=22),
    'allow_agent': False,
    'look_for_keys': False,
}
SFTP_STORAGE_INTERACTIVE = False


# REST Framework
# https://www.django-rest-framework.org/

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # 'rest_framework.authentication.BasicAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 20,
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
    'EXCEPTION_HANDLER': 'rollbar.contrib.django_rest_framework.post_exception_handler',
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.ScopedRateThrottle',
    ],
    'DEFAULT_THROTTLE_RATES': {
        'uploads': '3/day'
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'accounts.User'

LOGIN_URL = 'rest_framework:login'
LOGOUT_URL = 'rest_framework:logout'


# simple JWT
# https://django-rest-framework-simplejwt.readthedocs.io/

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=2),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=2),
}


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

LANGUAGES = (
    ('en', _('English')),
    ('de', _('German')),
)


# Django-model translation
# https://django-modeltranslation.readthedocs.io/en/latest/index.html

MODELTRANSLATION_DEFAULT_LANGUAGE = 'en'
MODELTRANSLATION_PREPOPULATE_LANGUAGE = 'en'

MODELTRANSLATION_FALLBACK_LANGUAGES = ('en', 'de')


TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LOCALE_PATHS = [os.path.join(BASE_DIR, 'locale')]


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'assets'),
)

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Rollbar CONFIG
# ------------------------------------------------------------------------------
ROLLBAR = {
    'access_token': env('ROLLBAR_TOKEN', default=''),
    'branch': 'master',
    'environment': env('ROLLBAR_ENVIRONMENT', default='development'),
    'root': BASE_DIR,
    'verify_https': False,
    'locals': {
        'safe_repr': False
    }
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'null': {
            'level': 'DEBUG',
            'class': 'logging.NullHandler',
        },
        'rollbar': {
            'access_token': ROLLBAR['access_token'],
            'environment': ROLLBAR['environment'],
            'class': 'rollbar.logger.RollbarHandler'
        },
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'src.orders': {
            'handlers': ['console', 'rollbar'],
            'level': 'INFO',
        },
    }
}

# django-rest-passwordreset
# https://pypi.org/project/django-rest-passwordreset/

DJANGO_REST_MULTITOKENAUTH_RESET_TOKEN_EXPIRY_TIME = 0.25

DJANGO_REST_PASSWORDRESET_TOKEN_CONFIG = {
    "CLASS": "django_rest_passwordreset.tokens.RandomNumberTokenGenerator",
    "OPTIONS": {
        "min_number": 100000,
        "max_number": 999999
    }
}

FRONTEND_URL = env.str('FRONTEND_URL', default='http://localhost:3000')
BACKEND_URL = env.str('BACKEND_URL', default='http://localhost:8000')


# django-trench
# https://django-trench.readthedocs.io/en/latest/index.html

TRENCH_AUTH = {
    'APPLICATION_ISSUER_NAME': 'GlobalIT24',
    'CONFIRM_DISABLE_WITH_CODE': True,
    'MFA_METHODS': {
        'app': {
            'VERBOSE_NAME': 'app',
            'VALIDITY_PERIOD': 60 * 10,
            'USES_THIRD_PARTY_CLIENT': True,
            'HANDLER': 'authentication.backends.ExtendedApplicationBackend'
        },
        'sms': {
            'VERBOSE_NAME': 'sms',
            'VALIDITY_PERIOD': 300,
            'SOURCE_FIELD': 'phone_number',
            'HANDLER': 'authentication.backends.TwoFactorPhoneAuthBackend',
        },
    },
}

# Social auth
AUTHENTICATION_BACKENDS = (
    'social_core.backends.facebook.FacebookOAuth2',
    'social_core.backends.linkedin.LinkedinOAuth2',
    'social_core.backends.google.GoogleOAuth2',
    'django.contrib.auth.backends.ModelBackend',
    'guardian.backends.ObjectPermissionBackend',
)
SOCIAL_AUTH_PIPELINE = [
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'authentication.pipelines.check_email',
    'social_core.pipeline.social_auth.associate_by_email',
    'authentication.pipelines.require_city',
    'authentication.pipelines.create_user',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.debug.debug',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
]
if DEBUG:
    SOCIAL_AUTH_PIPELINE += [
        'social_core.pipeline.debug.debug'
    ]

SOCIAL_AUTH_REDIRECT_PATH = env.str('SOCIAL_AUTH_REDIRECT_PATH', default='login/social/{PROVIDER}')
SOCIAL_AUTH_REDIRECT_URL = urljoin(FRONTEND_URL, SOCIAL_AUTH_REDIRECT_PATH)
SOCIAL_AUTH_LINKEDIN_OAUTH2_KEY = env.str('SOCIAL_AUTH_LINKEDIN_OAUTH2_KEY', default=None)
SOCIAL_AUTH_LINKEDIN_OAUTH2_SECRET = env.str('SOCIAL_AUTH_LINKEDIN_OAUTH2_SECRET', default=None)
SOCIAL_AUTH_LINKEDIN_OAUTH2_SCOPE = ['r_liteprofile', 'r_emailaddress']
SOCIAL_AUTH_LINKEDIN_OAUTH2_FIELD_SELECTORS = ['emailAddress']

SOCIAL_AUTH_FACEBOOK_KEY = env.str('SOCIAL_AUTH_FACEBOOK_KEY', default=None)
SOCIAL_AUTH_FACEBOOK_SECRET = env.str('SOCIAL_AUTH_FACEBOOK_SECRET', default=None)
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email', ]
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {'fields': 'id, name, email, first_name, last_name'}

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = env.str('SOCIAL_AUTH_GOOGLE_OAUTH2_KEY', default=None)
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = env.str('SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET', default=None)

# Mailing
# https://docs.djangoproject.com/en/3.0/topics/email/

EMAIL_USE_TLS = True
EMAIL_HOST = env.str('EMAIL_HOST', default='smtp.office365.com')
EMAIL_HOST_USER = env.str('EMAIL_HOST_USER', default=None)
EMAIL_HOST_PASSWORD = env.str('EMAIL_HOST_PASSWORD', default=None)
EMAIL_PORT = 587
EMAIL_TIMEOUT = env.int('EMAIL_TIMEOUT', default=30)

DEFAULT_FROM_EMAIL = env.str("DEFAULT_FROM_EMAIL", default=None)
TRANSFER_PROTOCOL = env.str("TRANSFER_PROTOCOL", default='http://')

# Internal emails
SUPPORT_EMAIL = env.str("SUPPORT_EMAIL", default="support@globalIT24.com")
CANDIDATE_PROFILE_EMAIL = env.str("CANDIDATE_PROFILE_EMAIL", default="candidate.profile@globalit24.com")
AGENCY_PROFILE_EMAIL = env.str("AGENCY_PROFILE_EMAIL", default="agencies.profiles@globalit24.com")
COMPANY_PROFILE_EMAIL = env.str("COMPANY_PROFILE_EMAIL", default="company.profile@globalit24.com")
COMPANY_PROJECTS_EMAIL = env.str("COMPANY_PROJECTS_EMAIL", default="company.projects@globalit24.com")
ASK_QUESTION_EMAIL = env.str("ASK_QUESTION_EMAIL", default="ask@globalit24.com")
HIRE_CANDIDATE_EMAIL = env.str('HIRE_CANDIDATE_EMAIL', default='hire@globalit24.com')
APPLY_POSITION_EMAIL = env.str('APPLY_POSITION_EMAIL', default='apply@globalit24.com')
IDENTIFICATE_CANDIDATE_EMAIL = env.str('IDENTIFICATE_CANDIDATE_EMAIL', default='id-check@globalit24.com')
REPORTS_EMAIL = env.str('REPORTS_EMAIL', default='s.isele@globalit24.com')

# REDIS related settings
REDIS_URL = env.str('REDIS_URL', default='redis://localhost:6379/')
REDIS_MAX_CONNECTIONS = env.int('REDIS_MAX_CONNECTIONS', default=10)

# Celery
CELERY_BROKER_URL = "{0}{1}".format(REDIS_URL, 0)
CELERY_RESULT_BACKEND = CELERY_BROKER_URL
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_SERIALIZER = 'json'

# React translation data
REACT_APP_USERNAME = env.str("REACT_APP_USERNAME", default=None)
REACT_APP_REPO_OWNER = env.str("REACT_APP_REPO_OWNER", default=None)
REACT_APP_REPO_NAME = env.str("REACT_APP_REPO_NAME", default=None)
REACT_APP_REPO_BRANCH = env.str("REACT_APP_REPO_BRANCH", default=None)
REACT_APP_TOKEN = env.str("REACT_APP_TOKEN", default=None)

# 2FA
WEBSMS_API_TOKEN = env.str("WEBSMS_API_TOKEN", default="TOKEN")


GUARDIAN_MONKEY_PATCH = False

# Payments
PAYMENT_CURRENCY = env.str("PAYMENT_CURRENCY", default="USD")
PAYMENT_AGENCY_MEMBERSHIP_PRICE = env.float("PAYMENT_AGENCY_MEMBERSHIP_PRICE", default=99.0)

# Paypal
PAYPAL_TEST = env.str("PAYPAL_TEST", default=True)
PAYPAL_BUSINESS = env.str("PAYPAL_BUSINESS", default=None)
PAYPAL_FRONTEND_SUCCESS_URL = env.str("PAYPAL_FRONTEND_SUCCESS_URL", default='my-account/subscription?success=true')
PAYPAL_FRONTEND_CANCEL_URL = env.str("PAYPAL_FRONTEND_CANCEL_URL", default='my-account/subscription')
